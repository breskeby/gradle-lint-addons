/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Rene' at '11/9/16 12:08 PM' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

 buildscript {
     repositories {
         mavenLocal()
         jcenter()
         maven { setUrl("http://dl.bintray.com/kotlin/kotlin-eap-1.1")}
         maven {
             setUrl("https://plugins.gradle.org/m2/")
         }
     }

     dependencies {
         classpath "com.breskeby.gradle:gradle-lint-addons:0.1-SNAPSHOT"
     }
 }

plugins {
 id "nebula.lint" version "5.1.3"
}


// Apply the java plugin to add support for Java
apply plugin: 'java'

gradleLint.rules = ['sample-rule'] // add as many rules here as you'd like

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
